# name: Create and publish a docker image

# on: push

# env:
#   REGISTRY: ghcr.io
#   IMAGE_NAME: phpfpm
#   REPO: docker-compose-php-stack
#   TARGET_IMAGE: phpfpm

# jobs:
#   build-and-push-image:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: read
#       packages: write

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Log in to the Container registry
#         uses: docker/login-action@v2
#         with:
#           registry: ${{ env.REGISTRY }}
#           ikermenka1: ${{ github.actor }}
#           password: ${{ secrets.TOKEN }}

#       # - name: Extract metadata (tags, labels) for Docker
#       #   id: meta
#       #   uses: docker/metadata-action@v4
#       #   with:
#       #     images: ${{ env.REGISTRY }}/phpfpm
#       #     tags: |
#       #       type=ref,event=branch
#       #       type=sha

#       # - name: Build and push Docker image
#       #   run: |
#       #     docker compose -f docker-compose.yml build ${{ env.IMAGE_NAME }}
#       #     docker push ${{ env.IMAGE_NAME }}
#       # - name: Docker-compose action
#       #   uses: isbang/compose-action@v1.4.0
#       #   with:
#       #     compose-file: "./docker-compose.yml"
#       #     down-flags: "--volumes"
#       #     services: ${{ env.IMAGE_NAME }}

#       - name: push Docker image
#         run: |
#           docker compose -f docker-compose.yml build
#           docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#       # - name: publish
#       #   uses: pennsignals/publish_docker-compose@v0.1.0
#       #   with:
#       #     version: '0.2.6-rc.1' # optional
#       #     docker_compose: 'docker-compose.build.yml' # required
#       #     repo_token: "${{ secrets.TOKEN }}"


# #works
# name: Create and publish a Docker image

# on: push

# env:
#   REGISTRY: ghcr.io

# jobs:
#   build-and-push-image:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: read
#       packages: write

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Log in to the Container registry
#         uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
#         with:
#           registry: ${{ env.REGISTRY }}
#           ikermenka1: ${{ github.actor }}
#           password: ${{ secrets.GITHUB_TOKEN }}
  
#       - name: Build and push Docker image
#         run: |
#           docker compose -f docker-compose.yml build phpfpm
#           docker tag docker.io/library/docker-compose-php-stack-phpfpm ${{ env.REGISTRY }}/ikermenka1/phpfpm:${{ github.run_number }}
#           docker push ${{ env.REGISTRY }}/ikermenka1/phpfpm:${{ github.run_number }}   

name: Build & publish docker images
on: push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./php-fpm/Dockerfile
            image: ghcr.io/ikermenka1/phpfpm
          # - dockerfile: ./src/Dockerfile-dril4net-distribution
          #   image: ghcr.io/ikermenka1/phpfpm
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ matrix.image }}
          tags: |
            type=sha


      - name: Build Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: false
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      
      - name: Scan image
        uses: anchore/scan-action@v3
        with:
          image: ${{ steps.meta.outputs.tags }}
          fail-build: true
          severity-cutoff: critical
          # output-format: table

      - name: upload Anchore scan SARIF report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Inspect action SARIF report
        run: cat ${{ steps.scan.outputs.sarif }}

      - name: Push images
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Delete images
        uses: smartsquaregmbh/delete-old-packages@v0.5.0
        with: 
          token: ${{ secrets.TOKEN }}
          user: ikermenka1
          type: container
          keep: 3
          names: |
            phpfpm

   